const ClassMiddleSensor=require("ClassSensorArchitecture");class ClassLPS25HB extends ClassMiddleSensor{constructor(_opts,_sensor_props){ClassMiddleSensor.apply(this,[_opts,_sensor_props]),this._name="BaseClassLPS25HB",this._sensor=require("BaseClassLPS25HB").connect({i2c:_opts.bus,address:_opts.address}),this._minPeriod=1e3,this._usedChannels=[],this._interval,this.Init(_sensor_props)}Init(_sensor_props){super.Init(_sensor_props),this._sensor.init()}Start(_num_channel,_period){let period="number"==typeof _period&_period>=this._minPeriod?_period:this._minPeriod;this._usedChannels.includes(_num_channel)||this._usedChannels.push(_num_channel),this._interval||(this._interval=setInterval(()=>{this._usedChannels.includes(0)&&(this.Ch0_Value=this._sensor.temp()),this._usedChannels.includes(1)&&(this.Ch1_Value=this._sensor.pressure())})),this._currentPeriod=period}ChangeFreq(_num_channel,freq){clearInterval(this._interval),setTimeout(()=>this.Start(freq),this._minfrequency)}Stop(_num_channel){_num_channel?this._usedChannels.splice(this._usedChannels.indexOf(_num_channel)):(this._usedChannels=[],clearInterval(this._interval),this._interval=null)}}exports=ClassLPS25HB;